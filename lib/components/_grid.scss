@charset "utf-8";

.container {
    padding-right: $gutter / 2;
    padding-left: $gutter / 2;
    margin-right: auto;
    margin-left: auto;
}

@each $infix, $value in $grid-breakpoints {
    @media print, screen and (min-width: $value) {
        .container {
            max-width: $value;
        }
    }
}

.container-fluid {
    width: 100%;
    padding-right: $gutter / 2;
    padding-left: $gutter / 2;
    margin-right: auto;
    margin-left: auto;
}

.row {
    display: flex;
    flex-flow: row wrap;
    margin-right: -$gutter / 2;
    margin-left: -$gutter / 2;
}

%grid-column {
    position: relative;
    width: 100%;
    padding-right: $gutter / 2;
    padding-left: $gutter / 2;
}

.col {
    flex: 1;
    max-width: 100%;
    @extend %grid-column;
}

@mixin make-col($size, $infix: '', $grid-columns: $columns) {
    .col#{$infix}-#{$size} {
        flex: 0 0 percentage($size / $columns);
        max-width: percentage($size / $columns);
    }
}

@for $size from 1 through $columns {
    @include make-col($size);
    .col-#{$size} {
        @extend %grid-column;
    }
}

@each $infix, $value in $grid-breakpoints {
    .col-#{$infix} {
        @extend %grid-column;
    }
    .col-#{$infix}-auto {
        @extend %grid-column;
    }
    @for $size from 1 through $columns {
        .col-#{$infix}-#{$size} {
            @extend %grid-column;
        }
    }
    @media print, screen and (min-width: $value) {
        .col-#{$infix} {
            flex-basis: 0;
            flex-grow: 1;
            max-width: 100%;
        }
        .col-#{$infix}-auto {
            flex: 0 0 auto;
            width: auto;
            max-width: 100%;
        }
        @for $size from 1 through $columns {
            @include make-col($size, -#{$infix});
        }
        @for $size from 1 through $columns {
            .order-#{$infix}-#{$size} {
                order: $size;
            }
        }
        @for $size from 1 through ($columns - 1) {
            @if not ($size == 0) {
                .offset-#{$infix}-#{$size} {
                    margin-left: percentage($size / $columns);
                }
            }
        }
    }
}

@each $infix, $value in $grid-breakpoints {
    
    @media print, screen and (min-width: $value) {
        .flex-#{$infix}-row            { flex-direction: row !important; }
        .flex-#{$infix}-column         { flex-direction: column !important; }
        .flex-#{$infix}-row-reverse    { flex-direction: row-reverse !important; }
        .flex-#{$infix}-column-reverse { flex-direction: column-reverse !important; }

        .flex-#{$infix}-wrap         { flex-wrap: wrap !important; }
        .flex-#{$infix}-nowrap       { flex-wrap: nowrap !important; }
        .flex-#{$infix}-wrap-reverse { flex-wrap: wrap-reverse !important; }
        .flex-#{$infix}-fill         { flex: 1 1 auto !important; }
        .flex-#{$infix}-grow-0       { flex-grow: 0 !important; }
        .flex-#{$infix}-grow-1       { flex-grow: 1 !important; }
        .flex-#{$infix}-shrink-0     { flex-shrink: 0 !important; }
        .flex-#{$infix}-shrink-1     { flex-shrink: 1 !important; }

        .justify-content-#{$infix}-start   { justify-content: flex-start !important; }
        .justify-content-#{$infix}-end     { justify-content: flex-end !important; }
        .justify-content-#{$infix}-center  { justify-content: center !important; }
        .justify-content-#{$infix}-between { justify-content: space-between !important; }
        .justify-content-#{$infix}-around  { justify-content: space-around !important; }

        .align-items-#{$infix}-start    { align-items: flex-start !important; }
        .align-items-#{$infix}-end      { align-items: flex-end !important; }
        .align-items-#{$infix}-center   { align-items: center !important; }
        .align-items-#{$infix}-baseline { align-items: baseline !important; }
        .align-items-#{$infix}-stretch  { align-items: stretch !important; }

        .align-content-#{$infix}-start   { align-content: flex-start !important; }
        .align-content-#{$infix}-end     { align-content: flex-end !important; }
        .align-content-#{$infix}-center  { align-content: center !important; }
        .align-content-#{$infix}-between { align-content: space-between !important; }
        .align-content-#{$infix}-around  { align-content: space-around !important; }
        .align-content-#{$infix}-stretch { align-content: stretch !important; }

        .align-self-#{$infix}-auto     { align-self: auto !important; }
        .align-self-#{$infix}-start    { align-self: flex-start !important; }
        .align-self-#{$infix}-end      { align-self: flex-end !important; }
        .align-self-#{$infix}-center   { align-self: center !important; }
        .align-self-#{$infix}-baseline { align-self: baseline !important; }
        .align-self-#{$infix}-stretch  { align-self: stretch !important; }
    }
}

.no-gutters {
    margin-right: 0;
    margin-left: 0;

    > .col,
    > [class*="col-"] {
        padding-right: 0;
        padding-left: 0;
    }
}